{"meta": {"type": "db", "canSave": true, "canEdit": true, "canAdmin": true, "canStar": true, "slug": "7-0-weekly-run-progress", "url": "/d/jR3AvSAMk/7-0-weekly-run-progress", "expires": "0001-01-01T00:00:00Z", "created": "2020-11-27T09:41:35Z", "updated": "2020-12-14T21:45:42Z", "updatedBy": "admin", "createdBy": "admin", "version": 24, "hasAcl": false, "isFolder": false, "folderId": 0, "folderUid": "", "folderTitle": "General", "folderUrl": "", "provisioned": false, "provisionedExternalId": ""}, "dashboard": {"annotations": {"list": [{"builtIn": 1, "datasource": "-- Grafana --", "enable": true, "hide": true, "iconColor": "rgba(0, 211, 255, 1)", "name": "Annotations & Alerts", "type": "dashboard"}]}, "editable": true, "gnetId": null, "graphTooltip": 0, "id": 10, "links": [], "panels": [{"datasource": null, "fieldConfig": {"defaults": {"custom": {}}, "overrides": []}, "gridPos": {"h": 23, "w": 24, "x": 0, "y": 0}, "id": 2, "options": {"config": {"displayModeBar": false}, "data": [{"type": "scatter"}], "layout": {"font": {"color": "darkgrey"}, "legend": {"orientation": "h"}, "margin": {"b": 60, "pad": 20, "t": 0}, "paper_bgcolor": "rgba(0,0,0,0)", "plot_bgcolor": "rgba(0,0,0,0)", "xaxis": {"gridcolor": "rgba(255,255,255,0.22)", "type": "date"}, "yaxis": {"gridcolor": "rgba(255,255,255,0.22)", "title": "Jobs"}}, "onclick": "console.log(data)\nwindow.updateVariables({query:{'var-project':'test'}, partial: true})", "script": "function getField(name, data) {\n  const field = data.series[0].fields.find(field => field.name === name).values.buffer;\n  return field;\n}\n\nfunction createTrace(y, name, color) {\n  return {\n    x: getField(\"timestamp\", data).map(time => time * 1000),\n    y: getField(y, data),\n    name,\n    marker: { \n      color,\n      size: 10\n    },\n    \"line\": {\n      color\n    },\n    \"text\": getField(y, data),\n    \"mode\": \"lines\",\n    \"textposition\": \"top\",\n    \"hoverinfo\": \"x+y+name\"\n  };\n}\n\nconst completedJobs = createTrace(\"completed_jobs\", \"Completed\", \"#F2495C\");\n\nconst totalJobs = createTrace(\"total_jobs\", \"Total\", \"#73BF69\");\n\nconst thresholdJobs = createTrace(\"rerun_threshold\", \"Rerun Threshold\", \"#d8d8d8 \");\n  \nreturn { data:[completedJobs, totalJobs, thresholdJobs], layout: {} };"}, "pluginVersion": "7.2.1", "targets": [{"data": "", "refId": "A", "target": "main_run_progress", "type": "table"}], "timeFrom": null, "timeShift": null, "title": "Run Progress", "type": "ae3e-plotly-panel"}, {"datasource": null, "fieldConfig": {"defaults": {"custom": {}}, "overrides": []}, "gridPos": {"h": 124, "w": 24, "x": 0, "y": 23}, "id": 62, "options": {"config": {"displayModeBar": false}, "data": [{"type": "scatter"}], "layout": {"font": {"color": "darkgrey"}, "margin": {"b": 60, "pad": 20, "t": 0}, "paper_bgcolor": "rgba(0,0,0,0)", "plot_bgcolor": "rgba(0,0,0,0)", "showlegend": false, "xaxis": {"gridcolor": "rgba(255,255,255,0.22)", "type": "date"}, "yaxis": {"gridcolor": "rgba(255,255,255,0.22)", "title": "Jobs"}}, "onclick": "console.log(data)\nwindow.updateVariables({query:{'var-project':'test'}, partial: true})", "script": "function getField(name, data) {\n  const field = data.series[0].fields.find((field) => field.name === name).values.buffer;\n  return field;\n}\n\nconst components = getField(\"component\", data);\nconst completedJobs = getField(\"completed_jobs\", data);\nconst timestamps = getField(\"timestamp\", data);\nconst totalJobs = getField(\"total_jobs\", data);\n\nconst traces = {};\n\nfor (const [i, component] of components.entries()) {\n  if (!traces[component]) {\n    traces[component] = { completed: [], timestamps: [], total: [] };\n  }\n  traces[component].completed.push(completedJobs[i]);\n  traces[component].total.push(totalJobs[i]);\n  traces[component].timestamps.push(timestamps[i]);\n}\n\nconst tracesList = [];\n\nlet i = 1;\n\nfor (const [name, value] of Object.entries(traces)) {\n  const lines = [\n    [\"completed\", \"#F2495C\"],\n    [\"total\", \"#73BF69\"]\n  ];\n  for (const [line, color] of lines) {\n    const v = {\n      x: value.timestamps.map(time => time * 1000),\n      y: value[line],\n      name,\n      marker: {\n        color,\n        size: 10,\n      },\n      line: {\n        color,\n      },\n      text: value.timestamps.map(() => name),\n      mode: \"lines\",\n      textposition: \"top\",\n      hoverinfo: \"x+y+name\",\n      type: 'scatter',\n      \"type\": \"date\",\n    };\n    if (i > 1) {\n      v.yaxis = `y${i}`;\n      v.xaxis = `x${i}`;\n    }\n    tracesList.push(v);\n  }\n  i += 1;\n}\n\nconsole.log(tracesList)\n\nconst layout = {\n  grid: {rows: Math.ceil(tracesList.length / 4), columns: 2, pattern: 'independent'}\n};\n\n\n\nfor (let i = 1; i <= tracesList.length; i+=2) {\n  let xnum = ((i - 1) / 2) + 1;\n  if (xnum == 1) {\n    xnum = \"\";\n  }\n  layout[`xaxis${xnum}`] = {\n    \"type\": \"date\",\n    \"gridcolor\": \"rgba(255,255,255,0.22)\"\n  };\n  layout[`yaxis${xnum}`] = {\n    \"title\": tracesList[i - 1].name,\n    \"gridcolor\": \"rgba(255,255,255,0.22)\"\n  };\n}\n\nreturn { data: tracesList, layout };\n"}, "pluginVersion": "7.2.1", "targets": [{"data": "", "refId": "A", "target": "component_progress", "type": "table"}], "timeFrom": null, "timeShift": null, "title": "Run Progress", "type": "ae3e-plotly-panel"}], "refresh": "1m", "schemaVersion": 26, "style": "dark", "tags": [], "templating": {"list": []}, "time": {"from": "now-6h", "to": "now"}, "timepicker": {}, "timezone": "", "title": "7.0 Weekly Run Progress", "uid": "jR3AvSAMk", "version": 24}}